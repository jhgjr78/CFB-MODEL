name: Run CFB Week

on:
  workflow_dispatch:
    inputs:
      year:
        description: "Season year (e.g., 2025)"
        required: true
        default: "2025"
      week:
        description: "Week number"
        required: true
      scope:
        description: "Scope: all | top25 | top10"
        required: true
        default: "all"
      mode:
        description: "FAST or FULL"
        required: true
        default: "FAST"

permissions:
  contents: write

jobs:
  run-week:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      CFBD_API_KEY: ${{ secrets.CFBD_API_KEY }}
      GIT_AUTHOR_NAME: automagic
      GIT_AUTHOR_EMAIL: actions@users.noreply.github.com
      GIT_COMMITTER_NAME: automagic
      GIT_COMMITTER_EMAIL: actions@users.noreply.github.com
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (requirements.txt if present; else minimal)
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pandas requests
          fi

      - name: Patient cache loader
        run: |
          python .github/runner/mini_loader.py \
            --year "${{ github.event.inputs.year }}" \
            --week "${{ github.event.inputs.week }}" \
            --mode "${{ github.event.inputs.mode }}"

      - name: Weekly predictions
        run: |
          python .github/runner/weekly.py \
            --year "${{ github.event.inputs.year }}" \
            --week "${{ github.event.inputs.week }}" \
            --scope "${{ github.event.inputs.scope }}" \
            --mode "${{ github.event.inputs.mode }}"

      - name: Commit outputs (json, csv, and new cache)
        run: |
          git add docs/week_preds.json week_preds.csv data/
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "week ${{ github.event.inputs.week }} ${{ github.event.inputs.year }} [$((RANDOM%10000)))]"
            git push
          fi

      - name: Print head of docs/week_preds.json
        run: |
          head -c 2000 docs/week_preds.json || true